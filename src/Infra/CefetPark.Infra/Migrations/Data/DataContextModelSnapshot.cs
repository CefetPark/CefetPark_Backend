// <auto-generated />
using System;
using CefetPark.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CefetPark.Infra.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CefetPark.Domain.Entidades.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("Cor_Id")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Modelo_Id")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Cor_Id");

                    b.HasIndex("Modelo_Id");

                    b.ToTable("Carro", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Cor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cor", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("char(8)")
                        .IsFixedLength();

                    b.Property<string>("Complemento")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Estacionamento_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TipoLogradouro_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estacionamento_Id")
                        .IsUnique();

                    b.HasIndex("TipoLogradouro_Id");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Estacionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Endereco_Id")
                        .HasColumnType("int");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QtdVagasLivres")
                        .HasColumnType("int");

                    b.Property<int>("QtdVagasTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estacionamento", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Marca_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Marca_Id");

                    b.ToTable("Modelo", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.RegistroEntradaSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("Carro_Id")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Estacionamento_Id")
                        .HasColumnType("int");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Carro_Id");

                    b.HasIndex("Estacionamento_Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("RegistroEntradaSaida", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.TipoLogradouro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoLogradouro", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuario", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AspNetUsers_Id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("char(11)")
                        .IsFixedLength();

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Departamento_Id")
                        .HasColumnType("int");

                    b.Property<string>("EmailPrincipal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmailSecundario")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelefonePrincipal")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TelefoneSecundario")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("TipoUsuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Departamento_Id");

                    b.HasIndex("TipoUsuario_Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.UsuarioCarro", b =>
                {
                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.Property<int>("Carro_Id")
                        .HasColumnType("int");

                    b.Property<int>("AtualizadoPor")
                        .HasColumnType("int");

                    b.Property<int>("CriadoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Usuario_Id", "Carro_Id");

                    b.HasIndex("Carro_Id");

                    b.ToTable("UsuarioCarro", (string)null);
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Carro", b =>
                {
                    b.HasOne("CefetPark.Domain.Entidades.Cor", "Cor")
                        .WithMany("Carros")
                        .HasForeignKey("Cor_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CefetPark.Domain.Entidades.Modelo", "Modelo")
                        .WithMany("Carros")
                        .HasForeignKey("Modelo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cor");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Endereco", b =>
                {
                    b.HasOne("CefetPark.Domain.Entidades.Estacionamento", "Estacionamento")
                        .WithOne("Endereco")
                        .HasForeignKey("CefetPark.Domain.Entidades.Endereco", "Estacionamento_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CefetPark.Domain.Entidades.TipoLogradouro", "TipoLogradouro")
                        .WithMany("Enderecos")
                        .HasForeignKey("TipoLogradouro_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estacionamento");

                    b.Navigation("TipoLogradouro");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Modelo", b =>
                {
                    b.HasOne("CefetPark.Domain.Entidades.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("Marca_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.RegistroEntradaSaida", b =>
                {
                    b.HasOne("CefetPark.Domain.Entidades.Carro", "Carro")
                        .WithMany("RegistrosEntradasSaidas")
                        .HasForeignKey("Carro_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CefetPark.Domain.Entidades.Estacionamento", "Estacionamento")
                        .WithMany("RegistrosEntradasSaidas")
                        .HasForeignKey("Estacionamento_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CefetPark.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("RegistrosEntradasSaidas")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Estacionamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Usuario", b =>
                {
                    b.HasOne("CefetPark.Domain.Entidades.Departamento", "Departamento")
                        .WithMany("Usuarios")
                        .HasForeignKey("Departamento_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CefetPark.Domain.Entidades.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuario_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.UsuarioCarro", b =>
                {
                    b.HasOne("CefetPark.Domain.Entidades.Carro", "Carro")
                        .WithMany("UsuariosCarros")
                        .HasForeignKey("Carro_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CefetPark.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("UsuariosCarros")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Carro", b =>
                {
                    b.Navigation("RegistrosEntradasSaidas");

                    b.Navigation("UsuariosCarros");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Cor", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Departamento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Estacionamento", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("RegistrosEntradasSaidas");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Modelo", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.TipoLogradouro", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CefetPark.Domain.Entidades.Usuario", b =>
                {
                    b.Navigation("RegistrosEntradasSaidas");

                    b.Navigation("UsuariosCarros");
                });
#pragma warning restore 612, 618
        }
    }
}
